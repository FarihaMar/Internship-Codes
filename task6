(async () => {
  const sleep = ms => new Promise(res => setTimeout(res, ms));

  const filters = {
    sortBy: "Latest",
    datePosted: "Past week",
    contentType: "Images",
    postedBy: "People you follow",
    fromMembers: ["Rajesh Kumar"],
    fromCompanies: ["InfluXify"]
  };

  // 1. Open "All filters" panel
  document.querySelector('button[aria-label*="Show all filters"]')?.click();
  await sleep(1500);

  // 2. Apply checkbox filters
  async function applyCheckbox(group, option) {
    const fs = [...document.querySelectorAll('fieldset')]
      .find(f => f.innerText.includes(group));
    if (!fs) return console.warn(`❌ Fieldset not found: ${group}`);
    const lbl = [...fs.querySelectorAll('label')]
      .find(l => l.innerText.includes(option));
    if (lbl) {
      lbl.click();
      console.log(`✅ Selected "${option}" in "${group}"`);
    } else {
      console.warn(`❌ Option not found: ${option} in ${group}`);
    }
    await sleep(1000); // wait after selection
  }

  await applyCheckbox("Sort by", filters.sortBy);
  await applyCheckbox("Date posted", filters.datePosted);
  await applyCheckbox("Content type", filters.contentType);
  await applyCheckbox("Posted by", filters.postedBy);

  // 3. Helper for searchable fields (From Member / From Company)
  async function applySearchField(ariaLabel, values, triggerText) {
    if (triggerText) {
      const triggerBtn = [...document.querySelectorAll('button')]
        .find(b => b.innerText.trim() === triggerText);
      if (triggerBtn) {
        triggerBtn.click();
        console.log(`🟢 Clicked trigger: "${triggerText}"`);
        await sleep(1000);
      }
    }

    for (const value of values) {
      let input;
      let tries = 0;
      while (!input && tries < 5) {
        input = document.querySelector(`input[aria-label="${ariaLabel}"]`);
        if (!input) {
          window.scrollBy(0, 150);
          await sleep(1000);
          tries++;
        }
      }

      if (!input) {
        console.warn(`❌ Input with aria-label "${ariaLabel}" not found after retries`);
        continue;
      }

      input.focus();
      input.value = value;
      input.dispatchEvent(new Event('input', { bubbles: true }));
      await sleep(1000); // wait for suggestions

      // 4. Click first suggestion
      const listboxOption = [...document.querySelectorAll('[role="listbox"] li')];
      if (listboxOption.length > 0) {
        listboxOption[0].click();
        console.log(`✅ Selected first suggestion: "${value}"`);
      } else {
        console.warn(`❌ No suggestions found for "${value}"`);
      }
      await sleep(1000);
    }
  }

  // 4. Apply From Members and From Companies
  await applySearchField("Add a person's name", filters.fromMembers, "Add a person's name");
  await applySearchField("Add a company's name", filters.fromCompanies, "Add a company's name");

  // 5. Confirm selections are visible in the filters
  const selectedTexts = [...document.querySelectorAll('span.t-14.t-black--light.t-normal[aria-hidden="true"]')]
    .map(span => span.textContent.trim());

  console.log("🧾 Confirmed Selections:");
  filters.fromMembers.forEach(name => {
    if (selectedTexts.find(t => t.includes(name))) console.log(`👤 From Member: ${name}`);
  });
  filters.fromCompanies.forEach(name => {
    if (selectedTexts.find(t => t.includes(name))) console.log(`🏢 From Company: ${name}`);
  });

  // 6. Click Show Results
  const showBtn = [...document.querySelectorAll('button')]
    .find(b => /show results/i.test(b.innerText));
  if (showBtn) {
    showBtn.click();
    console.log("🚀 Show results clicked");
  } else {
    console.warn("❌ Show results button not found");
  }
})();
